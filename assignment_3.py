# -*- coding: utf-8 -*-
"""Assignment # 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18z1QXajY46-kFP75fGq7AOHmf2x1A4E6

## Part 1: Looping Constructs
## Task 1: while loop
* Write a while loop that prints all the even numbers from 0 to 20.
* If the number reaches 16, break out of the loop.
"""

# sytex of while
# 1. counter any number with satrt and end limit
# 2. increament in counter
#  task or operations by loop are defined inside the loop body

counter = 0
while counter <= 5:
   print(counter) # task or operations by loop
   counter += 1

# Task 1: while loop
number = 0
while number <= 20:
    if number % 2 == 0:
        print(number)
    if number == 16:
        break # earlier exit of the loop continue keep executing the loop
    number += 1

"""# #Task 2: for loop with continue
* Iterate through numbers 1 to 15, skip numbers divisible by 3.
"""

# Syntex of for loop
#for (range start to end -1 )
for counter in range( 1, 11):
  print(counter)

"""Loop stopd when contdition does not match range(1,6) it will print 5 numbers  same with while counter < 6:

* Break ( if condition matches) loop will stop working here that mean when we say user break when number is divisible by 3. evne counter ends at 16 loop will stop at 3
* continue
* with continue loop will skip that particular value as mentioned above 3 and continue with 4 and also keep skiping the particular condition (6, 9, 12 , 15) untill the last step of code
"""



for num in range(1, 16):
    if num % 3 == 0:
        break
    print(num)

# Task 2: for loop with continue
for num in range(1, 16):
    if num % 3 == 0:
        continue
    print(num)

"""## Task 3: if-else statement
* Check if a number is positive, negative, or zero.
"""

# Task 3: if-else statement
number = int(input("Enter a number: "))

if number > 0:
    print("The number is positive.")
elif number < 0:
    print("The number is negative.")
else:
    print("The number is zero.")

"""## Task 4: Nested Loops
* Print multiplication table from 1 through 5.
"""

# Task 4: Nested loops
for i in range(1, 6):
    for j in range(1, 6):
        print(f"{i*j}", end="\t")
    print()  # Move to next line after inner loop